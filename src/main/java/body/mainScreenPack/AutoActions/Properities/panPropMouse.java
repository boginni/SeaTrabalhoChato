/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package body.mainScreenPack.AutoActions.Properities;

import body.mainScreenPack.AutoActions.AutomatedAction;
import body.mainScreenPack.AutoActions.MouseClick;

/**
 *
 * @author boginni
 */
public class panPropMouse extends PanProp {

    /**
     * Creates new form panMouseProperities
     */
    public panPropMouse() {
        initComponents();
    }
    
    MouseClick action;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        spnPressTime = new javax.swing.JSpinner();
        cmbAction = new javax.swing.JComboBox<>();
        lbl3 = new javax.swing.JLabel();
        lbl2 = new javax.swing.JLabel();
        final javax.swing.JLabel lbl8 = new javax.swing.JLabel();
        final javax.swing.JLabel lbl4 = new javax.swing.JLabel();
        spnPreDelay = new javax.swing.JSpinner();
        spnMouseX = new javax.swing.JSpinner();
        final javax.swing.JLabel lbl7 = new javax.swing.JLabel();
        final javax.swing.JLabel lbl5 = new javax.swing.JLabel();
        final javax.swing.JLabel lbl6 = new javax.swing.JLabel();
        cmbButton = new javax.swing.JComboBox<>();
        lbl1 = new javax.swing.JLabel();
        spnMouseY = new javax.swing.JSpinner();
        spnPosDelay = new javax.swing.JSpinner();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Mouse Click");

        jPanel1.setLayout(new java.awt.GridBagLayout());

        spnPressTime.setModel(new javax.swing.SpinnerNumberModel());
        spnPressTime.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel1.add(spnPressTime, gridBagConstraints);

        cmbAction.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Press", "Release", "Click" }));
        cmbAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbActionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weighty = 0.3;
        jPanel1.add(cmbAction, gridBagConstraints);

        lbl3.setText("PressTime");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(lbl3, gridBagConstraints);

        lbl2.setText("Action");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.7;
        jPanel1.add(lbl2, gridBagConstraints);

        lbl8.setText("MouseY");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        jPanel1.add(lbl8, gridBagConstraints);

        lbl4.setText("PreStart Delay");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel1.add(lbl4, gridBagConstraints);

        spnPreDelay.setModel(new javax.swing.SpinnerNumberModel());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        jPanel1.add(spnPreDelay, gridBagConstraints);

        spnMouseX.setModel(new javax.swing.SpinnerNumberModel());
        spnMouseX.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                spnMouseXPropertyChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        jPanel1.add(spnMouseX, gridBagConstraints);

        lbl7.setText("MouseX");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        jPanel1.add(lbl7, gridBagConstraints);

        lbl5.setText("PosStart Delay");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        jPanel1.add(lbl5, gridBagConstraints);

        lbl6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl6.setText("Position");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        jPanel1.add(lbl6, gridBagConstraints);

        cmbButton.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Left Click", "Middle Click", "Right Click", "Button 4", "Button 5" }));
        cmbButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weighty = 0.3;
        jPanel1.add(cmbButton, gridBagConstraints);

        lbl1.setText("Button");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.7;
        jPanel1.add(lbl1, gridBagConstraints);

        spnMouseY.setModel(new javax.swing.SpinnerNumberModel());
        spnMouseY.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                spnMouseYPropertyChange(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        jPanel1.add(spnMouseY, gridBagConstraints);

        spnPosDelay.setModel(new javax.swing.SpinnerNumberModel());
        spnPosDelay.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        jPanel1.add(spnPosDelay, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbButtonActionPerformed
        // TODO add your handling code here:
        updateValues(01);
        
        
        
    }//GEN-LAST:event_cmbButtonActionPerformed

    private void cmbActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbActionActionPerformed
        // TODO add your handling code here:
        updateValues(02);
        
    }//GEN-LAST:event_cmbActionActionPerformed

    private void spnMouseXPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_spnMouseXPropertyChange
        // TODO add your handling code here:
        
        updateValues(03);
    }//GEN-LAST:event_spnMouseXPropertyChange

    private void spnMouseYPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_spnMouseYPropertyChange
        // TODO add your handling code here:
        updateValues(04);
    }//GEN-LAST:event_spnMouseYPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbAction;
    private javax.swing.JComboBox<String> cmbButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl3;
    private javax.swing.JSpinner spnMouseX;
    private javax.swing.JSpinner spnMouseY;
    private javax.swing.JSpinner spnPosDelay;
    private javax.swing.JSpinner spnPreDelay;
    private javax.swing.JSpinner spnPressTime;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setCurrentAction(AutomatedAction newAction) {
        
        action = (MouseClick) newAction;
        cmbButton.setSelectedIndex(action.getButton()-1);
        cmbAction.setSelectedIndex(action.getAction());
        
        spnMouseX.setValue(action.getmX());
        spnMouseY.setValue(action.getmY());
        
        spnPressTime.setValue(action.getDelay());
    }

    @Override
    public AutomatedAction getAction() {
        return action;
    }
    
    
    
    void updateValues(int i){
        if(action == null){
            return;
        }
        switch(i){
            case 0:
                break;
            case 01:
                action.setButton(cmbButton.getSelectedIndex()+1);
                break;
            case 02:
                action.setAction(cmbAction.getSelectedIndex());
                break;
            case 03:
                action.setmX((int)spnMouseX.getValue());
                break;
            case 04:
                action.setmY((int)spnMouseY.getValue());
                break;
            default:
                break;
        }
        //action.setDelay((int)spnPressTime.getValue());
    }
   
    
        
}
